name: Preview

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

concurrency:
  group: preview-${{ github.event.number }}
  cancel-in-progress: true

jobs:
  Deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: ./.github/actions/setup

      - name: teardown preview database
        if: github.event.action != 'closed'
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          cd recoverage.cloud && pnpm wrangler d1 delete "preview-db-pr-${{ github.event.number }}" -y || true

      - name: create preview database
        if: github.event.action != 'closed'
        id: create_db
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          database_name="preview-db-pr-${{ github.event.number }}"
          output=$(cd recoverage.cloud && pnpm wrangler d1 create $database_name)
          echo "$output"
          json_part=$(echo "$output" | perl -0777 -ne 'print $1 if /({.*})/s')
          echo "$json_part"
          database_id=$(echo "$json_part" | jq -r '.d1_databases[0].database_id')
          echo "database_id=$database_id" >> $GITHUB_OUTPUT
          echo "database_name=$database_name" >> $GITHUB_OUTPUT

      - name: configure preview worker
        if: github.event.action != 'closed'
        env:
          PR_NUMBER: ${{ github.event.number }}
          DATABASE_ID: ${{ steps.create_db.outputs.database_id }}
          DATABASE_NAME: ${{ steps.create_db.outputs.database_name }}
        run: |
          pnpm -F recoverage.cloud run preview:config
          cat wrangler-preview.jsonc

      - name: deploy preview worker
        if: github.event.action != 'closed'
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: pnpm -F recoverage.cloud run preview

      - name: teardown all
        if: github.event.action == 'closed'
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          npx wrangler delete --name "preview-worker-pr-${{ github.event.number }}"
          npx wrangler d1 delete "preview-db-pr-${{ github.event.number }}" --yes
